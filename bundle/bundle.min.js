"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class AdvancedState{constructor(t){this.state=t,this.absoluteRadarAngle=Math.deg.normalize(this.state.radar.angle+this.state.angle),this.position={x:t.x,y:t.y}}orientationString(){return`${this.state.x}${this.state.y}${this.state.angle}${this.state.radar.angle}`}getPointAtDistanceAlongRadar(t){return{x:this.state.x+Math.cos(this.absoluteRadarAngle*Math.PI/180)*t,y:this.state.y+Math.sin(this.absoluteRadarAngle*Math.PI/180)*t}}}const BATTLEFIELD_WIDTH=850,BATTLEFIELD_HEIGHT=550,SOUTH=90,NORTH=-90,WEST=-180,EAST=0,TANK_WIDTH=36;var Constants=Object.freeze({__proto__:null,BATTLEFIELD_WIDTH:BATTLEFIELD_WIDTH,BATTLEFIELD_HEIGHT:BATTLEFIELD_HEIGHT,SOUTH:SOUTH,NORTH:NORTH,WEST:WEST,EAST:EAST,TANK_WIDTH:TANK_WIDTH});Number.prototype.isWhole=function(t=1e-8){return Math.abs(Math.round(this)-this)<t};class OriginFinder{constructor(){this.origin={x:void 0,y:void 0},this.lastX=void 0,this.lastY=void 0,this.lastOrientation=void 0}update(i){if(!this.origin.x||!this.origin.y){var s=i.state.radar.wallDistance;if(s){var o=this.lastOrientation&&this.lastOrientation!=i.orientationString();this.lastOrientation=i.orientationString();let t=i.getPointAtDistanceAlongRadar(s);!this.origin.x&&t.x.isWhole()&&(this.lastX&&this.lastX==Math.round(t.x)&&o&&(this.origin.x=this.lastX-(90<=Math.abs(i.absoluteRadarAngle)?0:BATTLEFIELD_WIDTH)),this.lastX=Math.round(t.x)),!this.origin.y&&t.y.isWhole()&&(this.lastY&&this.lastY==Math.round(t.y)&&o&&(this.origin.y=this.lastY-(0<i.absoluteRadarAngle?BATTLEFIELD_HEIGHT:0)),this.lastY=Math.round(t.y))}}}}class Autopilot{constructor(){this.originFinder=new OriginFinder,this.origin=this.originFinder.origin,this.advancedState=void 0,this.path=[],this.nextPosition=void 0}update(t,i){this.state=t,this.advancedState=new AdvancedState(t),this.control=i,this.originFinder.update(this.advancedState)}isOriginKnown(){return this.origin.x&&this.origin.y}setOrigin(t,i){this.origin.x=t,this.origin.y=i}lookEverywhere(){this.control.RADAR_TURN=1}lookAtEnemy(t){t=Math.deg.atan2(t.y-this.state.y,t.x-this.state.x),t=Math.deg.normalize(t-this.state.angle),t=Math.deg.normalize(t-this.state.radar.angle);this.control.RADAR_TURN=t}isWallCollisionImminent(t=3){if(this.state.collisions.wall)return!0;if(this.isOriginKnown()){t=this.extrapolatedOuterPosition(t);return t.x<=this.origin.x||t.x>=this.origin.x+BATTLEFIELD_WIDTH||t.y<=this.origin.y||t.y>=this.origin.y+BATTLEFIELD_HEIGHT}}turnToAngle(t){if(t=Math.deg.normalize(t),this.state.angle==t)return this.control.TURN=0;t=Math.deg.normalize(t-this.state.angle);return this.control.TURN=t/2,t}turnToPoint(t,i,s=!1){if(!this.isOriginKnown()&&s)throw new"Cannot turn to point based on zero origin because the origin is not yet known";t+=s?this.origin.x:0,s=i+(s?this.origin.y:0),t=Math.deg.atan2(s-this.state.y,t-this.state.x);return this.turnToAngle(t)}moveToPoint(t,i,s=!1){this.control.THROTTLE=0;s=this.turnToPoint(t,i,s);s<60&&(this.control.THROTTLE=(60-s)/60)}moveAlongAngle(t){this.control.THROTTLE=0;t=Math.abs(this.turnToAngle(t));t<60&&(this.control.THROTTLE=(60-t)/60)}loopOnPath(t,i,s=50){if(0!=t.length){if(0==this.path.length&&(this.path=t,i)){if(!this.isOriginKnown())throw new"Cannot loop on positions based on zero origin because the origin is not yet known";this.path.forEach(t=>{t.x+=this.origin.x,t.y+=this.origin.y})}this.nextPosition||(this.nextPosition=this.path.shift(),this.path.push(this.nextPosition)),Math.distance(this.nextPosition.x,this.nextPosition.y,this.state.x,this.state.y)<=s&&(this.nextPosition=this.path.shift(),this.path.push(this.nextPosition)),this.moveToPoint(this.nextPosition.x,this.nextPosition.y)}}stopLoopOnPath(){this.path=[],this.nextPosition=void 0,this.stop()}stop(){this.control.TURN=0,this.control.THROTTLE=0,this.control.BOOST=0}shootEnemy(t,i=300){var s,o;t&&(o=(s=Math.distance(this.state.x,this.state.y,t.x,t.y))/4,o=Autopilot.extrapolatedPosition(t,t.angle,t.speed,o),o=Math.deg.atan2(o.y-this.state.y,o.x-this.state.x),o=Math.deg.normalize(o-this.state.angle),o=Math.deg.normalize(o-this.state.gun.angle),this.control.GUN_TURN=.3*o,Math.abs(o)<2&&(this.control.SHOOT=i<s?.1:1.2-s/i))}extrapolatedPosition(t){return Autopilot.extrapolatedPosition(this.advancedState.position,this.state.angle,this.speed(),t)}extrapolatedOuterPosition(t){t=this.extrapolatedPosition(t);return{x:t.x+Math.sqrt(2)*TANK_WIDTH/2*(90<=Math.abs(this.state.angle)?-1:1),y:t.y+Math.sqrt(2)*TANK_WIDTH/2*(this.state.angle<0?-1:1)}}speed(){return 2*this.control.THROTTLE*(1==this.control.BOOST?2:1)}static extrapolatedPosition(t,i,s,o){return{x:t.x+o*s*Math.cos(Math.deg2rad(i)),y:t.y+o*s*Math.sin(Math.deg2rad(i))}}}exports.Autopilot=Autopilot,exports.Constants=Constants;
